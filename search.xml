<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>分解质因子</title>
    <url>/2020/11/18/%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E5%AD%90/</url>
    <content><![CDATA[<p>将一个正整数分解质因数，例如，输入90，输出2 3 3 5。</p>
<p>输入一个正整数n（2&lt;=n&lt;=2000）。</p>
<p>从小到大输出n的所有质因子，每两个数之间空一格。</p>
<p><strong>提示：</strong></p>
<p>注意，最后一个数后面没有空格！！</p>
<p><strong>程序分析：对 t 进行分解质因数，应先找到一个最小的质数 i ，然后按下述步骤完成：</strong></p>
<p><strong>(1)如果这个质数恰等于（小于的时候，继续执行循环）t，则说明分解质因数的过程已经结束，另外 打印出即可。</strong><br><strong>(2)但 t 能被 i 整除，则应打印出 i 的值，并用 t 除以 i 的商,作为新的正整数 t .重复执行第二步。</strong><br><strong>(3)如果 t 不能被k整除，则用k+1作为k的值,重复执行第一步。</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=t;i++)&#123;</span><br><span class="line">		<span class="keyword">while</span>(t%i==<span class="number">0</span>)&#123; <span class="comment">//循环一层一层分解</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">			t/=i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>小汽车的位置</title>
    <url>/2020/11/11/%E5%B0%8F%E6%B1%BD%E8%BD%A6%E7%9A%84%E4%BD%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>有一辆智能小车，最初（时间为0)的位置为(0,0)，我们想知道它最后的位置。小车以每小时10公里的速度向北移动（以北为y轴正向，以东为x轴正向）。小车会受到一系列依照时间戳记排序的命令，1表示“向左转”，2表示“向右转”，3表“停止”。每个命令的前面有一个时间戳记，所以我们知道该命令是何时发出的。最后一个命令一定是“停止”。我们另外假设，这辆小车非常灵活，它可以在瞬间转弯。<br>以下列输入为例。小车在时间为5的时候收到一个“向左转”的命令1，在时间10收到一个“向右转”的命令2，在时间15收到一个“停止”的命令3。那么在最后时间15的时候，小车的位置将在（-50,100）。程序只要求输出小车最后的位置，第一个整数是x坐标，第二个整数是y坐标。</p>
<p>输入包含多个命令，每个命令由整数time和command组成，表示在时刻time发出命令command。command的取值范围1-3，含义如上所述。</p>
<p>输出占一行，包含两个整数，表示小车的最终位置。两个整数之间由空格隔开。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span> </span><br><span class="line"><span class="number">10</span> </span><br><span class="line"><span class="number">2</span> </span><br><span class="line"><span class="number">15</span> </span><br><span class="line"><span class="number">3</span></span><br><span class="line">样例输出 Copy</span><br><span class="line"><span class="number">-50</span> <span class="number">100</span></span><br></pre></td></tr></table></figure>

<p><strong>提示</strong></p>
<p>（1）数字化。可为四个方向编号，自向北开始，逆时针将4个方向依次编号为0,1,2,3。当接到向左转命令，方向号增1，向右转则方向号减1。为避免出现负数或大于3的情况，可对4取模。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,y=<span class="number">0</span>;<span class="comment">//记录小汽车的位置</span></span><br><span class="line">	<span class="keyword">int</span> command;<span class="comment">//存储命令号</span></span><br><span class="line">	<span class="keyword">int</span> preTime=<span class="number">0</span>,curTime;<span class="comment">//存储上次发布命令时间和现在命令时间</span></span><br><span class="line">	<span class="keyword">int</span> direction=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;curTime,&amp;command))&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span>(direction)&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">		y+=<span class="number">10</span>*(curTime-preTime);<span class="keyword">break</span>; <span class="comment">//(0,50)</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">		x-=<span class="number">10</span>*(curTime-preTime);<span class="keyword">break</span>;<span class="comment">//(-50,50)十秒时  十五秒时 (-50,100)</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		y-=<span class="number">10</span>*(curTime-preTime);<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">		x+=<span class="number">10</span>*(curTime-preTime);<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(command==<span class="number">3</span>)&#123;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command==<span class="number">1</span>)&#123;<span class="comment">//向左转方向加一</span></span><br><span class="line">		direction++;<span class="comment">//5秒时方向为1 向左</span></span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command==<span class="number">2</span>)&#123;<span class="comment">//向右转方向减一</span></span><br><span class="line">		direction--; <span class="comment">//十秒时方向为0</span></span><br><span class="line">	&#125;</span><br><span class="line">	direction=(direction+<span class="number">4</span>)%<span class="number">4</span>;<span class="comment">//对四取余 保证方向在0-3之间</span></span><br><span class="line">	preTime=curTime;<span class="comment">//将当前时间转变为上一次时间</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,x,y);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>已知不等式 1！+2！+3！+...+m！‹n,请编程对用户指定的n值计算并输出满足该不等式的m的整数解</title>
    <url>/2020/10/15/%E5%B7%B2%E7%9F%A5%E4%B8%8D%E7%AD%89%E5%BC%8F-1%EF%BC%81-2%EF%BC%81-3%EF%BC%81-m%EF%BC%81%E2%80%B9n-%E8%AF%B7%E7%BC%96%E7%A8%8B%E5%AF%B9%E7%94%A8%E6%88%B7%E6%8C%87%E5%AE%9A%E7%9A%84n%E5%80%BC%E8%AE%A1%E7%AE%97%E5%B9%B6%E8%BE%93%E5%87%BA%E6%BB%A1%E8%B6%B3%E8%AF%A5%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84m%E7%9A%84%E6%95%B4%E6%95%B0%E8%A7%A3/</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">int</span> n,arr[<span class="number">100</span>],a,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>,&amp;n);</span><br><span class="line">	arr[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="comment">//计算每一项阶乘  存入数组</span></span><br><span class="line">	<span class="keyword">for</span> (a = <span class="number">2</span>; a &lt; <span class="number">100</span>; a++) &#123;</span><br><span class="line">		arr[a]=arr[a<span class="number">-1</span>]*a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//循环遍历 存入的阶乘的数组 计算阶乘的和 与输入的n作比较</span></span><br><span class="line">	<span class="keyword">for</span>(a=<span class="number">1</span>;a&lt;<span class="number">100</span>;a++)&#123;</span><br><span class="line">		sum+=arr[a];</span><br><span class="line">		<span class="keyword">if</span>(sum&gt;=n)&#123;<span class="comment">//如果sun&gt;n的话 说明数组的前一项一定小于n</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;m&lt;=%ld&quot;</span>,a<span class="number">-1</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>杨治原的个人博客</title>
    <url>/2020/10/10/%E6%9D%A8%E6%B2%BB%E5%8E%9F%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="杨治原的个人博客"><a href="#杨治原的个人博客" class="headerlink" title="杨治原的个人博客"></a>杨治原的个人博客</h1><p>喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static void main(String [] args)&#123;</span><br><span class="line"></span><br><span class="line">	System.out.println(&quot;初次见面请多多关照&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，喜欢简约，酷爱小丑，</p>
<a id="more"></a>

<p>初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。初次见面请多多关照。</p>
]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>空心菱形</title>
    <url>/2020/11/13/%E7%A9%BA%E5%BF%83%E8%8F%B1%E5%BD%A2/</url>
    <content><![CDATA[<h3 id="空心菱形"><a href="#空心菱形" class="headerlink" title="空心菱形"></a>空心菱形</h3><p><strong>题目描述</strong></p>
<p>输入一个整数n，（1&lt;=n&lt;=20）,输出一个空心菱形，其中每个边由n个’*’组成。</p>
<p><strong>输入</strong></p>
<p>输入包含一个整数,n（1&lt;=n&lt;=20）</p>
<p><strong>输出</strong></p>
<p>输出一个空心菱形，每个边由n个’*’组成</p>
<p><strong>5</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    *</span><br><span class="line">   * *</span><br><span class="line">  *   *</span><br><span class="line"> *     *</span><br><span class="line">*       *</span><br><span class="line"> *     *</span><br><span class="line">  *   *</span><br><span class="line">   * *</span><br><span class="line">    *</span><br></pre></td></tr></table></figure>



<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,m,t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">	<span class="keyword">if</span>(i==<span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n-i<span class="number">-1</span>; j++) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n-i<span class="number">-1</span>; j++) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">2</span>*i<span class="number">-1</span>; k++) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			m=k;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印下面的*</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">	<span class="keyword">if</span>(i==<span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">continue</span>;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=i<span class="number">-1</span>; j++) &#123;</span><br><span class="line">			t=j;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=m-(<span class="number">2</span>*i<span class="number">-1</span>); k&gt;<span class="number">0</span>;k--) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(i==(n<span class="number">-1</span>))&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*\n&quot;</span>);	</span><br><span class="line">	 	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>童年生活二三事（多实例测试）</title>
    <url>/2020/11/24/%E7%AB%A5%E5%B9%B4%E7%94%9F%E6%B4%BB%E4%BA%8C%E4%B8%89%E4%BA%8B(%E5%A4%9A%E5%AE%9E%E4%BE%8B%E6%B5%8B%E8%AF%95)/</url>
    <content><![CDATA[<h3 id="1091-童年生活二三事（多实例测试）"><a href="#1091-童年生活二三事（多实例测试）" class="headerlink" title="1091: 童年生活二三事（多实例测试）"></a>1091: 童年生活二三事（多实例测试）</h3><p>Redraiment小时候走路喜欢蹦蹦跳跳，他最喜欢在楼梯上跳来跳去。 但年幼的他一次只能走上一阶或者一下子蹦上两阶。 现在一共有N阶台阶，请你计算一下Redraiment从第0阶到第N阶共有几种走法。</p>
<p>输入包括多组数据。 每组数据包括一行:**N(1≤N≤40)**。 输入以0结束</p>
<p>对应每个输入包括一个输出。 为redraiment到达第n阶不同走法的数量。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">3</span><br><span class="line">0</span><br><span class="line">输出</span><br><span class="line">1</span><br><span class="line">3</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">41</span>];</span><br><span class="line">	<span class="keyword">int</span> i,n;</span><br><span class="line">	a[<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//第一台阶跳法</span></span><br><span class="line">	a[<span class="number">2</span>]=<span class="number">2</span>;<span class="comment">//第二台阶跳法</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">3</span>;i&lt;=<span class="number">40</span>;i++)&#123;<span class="comment">//从第三台阶开始计算</span></span><br><span class="line">		a[i]=a[i<span class="number">-2</span>]+a[i<span class="number">-1</span>];  <span class="comment">//下一个台阶的跳法等于前两个台阶跳法之和  列举找规律</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n),n!=<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[n]);<span class="comment">//输出对应台阶的跳法</span></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>输入一个正整数n,逆序输出n的各位数字，用空格隔开，例如，输入2356，输出6 5 3 2</title>
    <url>/2020/10/27/%E8%BE%93%E5%85%A5%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B4%E6%95%B0n-%E9%80%86%E5%BA%8F%E8%BE%93%E5%87%BAn%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%EF%BC%8C%E7%94%A8%E7%A9%BA%E6%A0%BC%E9%9A%94%E5%BC%80%EF%BC%8C%E4%BE%8B%E5%A6%82%EF%BC%8C%E8%BE%93%E5%85%A52356%EF%BC%8C%E8%BE%93%E5%87%BA6-5-3-2/</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,base=<span class="number">1</span>,t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    m=n;</span><br><span class="line">    <span class="keyword">while</span>(m&gt;<span class="number">9</span>)&#123;</span><br><span class="line">        m/=<span class="number">10</span>;</span><br><span class="line">        base*=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(base&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        t=n/base;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,t);</span><br><span class="line">        n%=base;</span><br><span class="line">        base/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
</search>
